# Data Connector for MySQL

This article describes how to use the data connector for MySQL, which allows you to directly import data from your MySQL to Treasure Data.

## Prerequisites

NOTE: Currently, this feature is in Beta. For more information, please contact <a href=mailto:support@treasuredata.com>support@treasuredata.com</a>.

  * Basic knowledge of Treasure Data
  * Basic knowledge of MySQL
  * A MySQL instance running **remotely**, for example on RDS.

## Step 0: Install 'td' command v0.11.9 or later

You can install the newest [Treasure Data Toolbelt](http://toolbelt.treasuredata.com/).

    $ td --version
    0.11.10

## Step 1: Create Seed Config File (seed.yml)

First, please prepare `seed.yml` like below, with your MySQL access information.
    :::yaml
    config:
      in:
        type: mysql
        host: mysql_host_name
        port: 3306
        user: test_user
        password: test_password
        database: test_database
        table: test_table
        select: "*"
      out:
        mode: replace

This example dumps all records inside the table. You can have more detailed control with [additional parameters](https://github.com/embulk/embulk-input-jdbc/tree/master/embulk-input-mysql).

## Step 2: Guess Fields (Generate load.yml)

Second, use `connector:guess`. This command automatically reads the target file, and intelligently guesses the file format.

    :::terminal
    $ td connector:guess seed.yml -o load.yml

Then you can preview how the system will parse the file by `preview` command.

    $ td connector:preview load.yml
    +---------+--------------+----------------------------------+------------+---------------------------+
    | id:long | name:string  | description:string               | price:long | created_at:timestamp      |
    +---------+--------------+----------------------------------+------------+---------------------------+
    | 1       | "item name1" | "26e3c3625366591bc2ffc6e262976e" | 2419       | "2014-02-16 13:01:06 UTC" |
    | 2       | "item name2" | "3e9dd9474dacb78afd607f9e0a3366" | 1298       | "2014-05-24 13:59:26 UTC" |
    | 3       | "item name3" | "9b6c9e4a140284d3951681e9e047f6" | 9084       | "2014-06-21 00:18:21 UTC" |
    | 4       | "item name4" | "a11faf5e63c1b02a3d4c2b5cbb7331" | 669        | "2014-05-02 03:44:08 UTC" |
    | 6       | "item name6" | "6aa15471c373ddc8a6469e1c918f98" | 3556       | "2014-03-29 08:30:23 UTC" |
    +---------+--------------+----------------------------------+------------+---------------------------+

## Step 3: Execute Load Job

Finally, submit the load job. It may take a couple of hours depending on the data size. Users need to specify the database and table where their data are stored. You must have [created the database and table](<%= @env[:url_doc] %>articles/database-and-table) first. If the database or the table does not exist the command reports an error.

    :::terminal
    $ td connector:issue load.yml --database td_sample_db --table td_sample_table

NOTE: Currently table won't be created automatically. You need to create the destination database and table manually.

## Scheduled execution

You can schedule periodic Data Connector execution for periodic MySQL import.
We take great care in distributing and operating our scheduler in order to achieve high availability.
By using this feature, you no longer need a `cron` daemon on your local datacenter.

### Create the schedule

A new schedule can be created using the `td connector:create` command.
The name of the schedule, cron-style schedule, the database and table where their data will be stored, and the Data Connector configuration file are required.

    :::terminal
    $ td connector:create \
        daily_mysql_import \
        "10 0 * * *" \
        td_sample_db \
        td_sample_table \
        load.yml

NOTE: The `cron` parameter also accepts these three options: `@hourly`, `@daily` and `@monthly`.

### List the Schedules

You can see the list of currently scheduled entries by `td connector:list`.

    :::terminal
    $ td connector:list
    +--------------------+--------------+----------+-------+--------------+-----------------+-------------------------+
    | Name               | Cron         | Timezone | Delay | Database     | Table           | Config                  |
    +--------------------+--------------+----------+-------+--------------+-----------------+-------------------------+
    | daily_mysql_import | 10 0 * * *   | UTC      | 0     | td_sample_db | td_sample_table | {"type"=>"mysql", ... } |
    +--------------------+--------------+----------+-------+--------------+-----------------+-------------------------+

### Show the Setting and History of Schedules

`td connector:show` shows the execution setting of a schedule entry.

    :::terminal
    % td connector:show daily_mysql_import
    Name     : daily_mysql_import
    Cron     : 10 0 * * *
    Timezone : UTC
    Delay    : 0
    Database : td_sample_db
    Table    : td_sample_table

`td connector:history` shows the execution history of a schedule entry. To investigate the results of each individual execution, please use `td job <jobid>`.

    :::terminal
    % td connector:history daily_mysql_import
    +--------+---------+---------+--------------+-----------------+----------+---------------------------+----------+
    | JobID  | Status  | Records | Database     | Table           | Priority | Started                   | Duration |
    +--------+---------+---------+--------------+-----------------+----------+---------------------------+----------+
    | 578066 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-18 00:10:05 +0000 | 160      |
    | 577968 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-17 00:10:07 +0000 | 161      |
    | 577914 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-16 00:10:03 +0000 | 152      |
    | 577872 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-15 00:10:04 +0000 | 163      |
    | 577810 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-14 00:10:04 +0000 | 164      |
    | 577766 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-13 00:10:04 +0000 | 155      |
    | 577710 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-12 00:10:05 +0000 | 156      |
    | 577610 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-11 00:10:04 +0000 | 157      |
    +--------+---------+---------+--------------+-----------------+----------+---------------------------+----------+
    8 rows in set

### Delete the Schedule

`td connector:delete` will remove the schedule.

    :::terminal
    $ td connector:delete daily_mysql_import

## Further Information

- [List of Options for MySQL Data Connector](https://github.com/embulk/embulk-input-jdbc/tree/master/embulk-input-mysql)
