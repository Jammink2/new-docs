# Treasure Data iOS SDK

This article will help you start sending the data from your iOS app to Treasure Data, using our iOS SDK library. In this way, you don't have to install anything on your server-side to track the mobile app activities.

## Prerequisites

  * Basic knowledge of iOS Development (Xcode, [CocoaPods](http://cocoapods.org/))
  * Basic knowledge of Treasure Data.

NOTE: iOS SDK is now under the <b>Beta</b> phase. Any feedbacks or bug reports are welcomed.

## Step 1: Install the Library

[CocoaPods](http://cocoapods.org/) is a recommended way to install Treasure Data iOS SDK. First, please install CocoaPods to your PC.

    :::term
    $ gem install cocoapods

Add the following line to your Podfile:

    :::ruby
    pod 'TreasureData-iOS-SDK', '= 0.1.0'

Finally, please run `pod install`.

    :::term
    $ pod install

## Step 2: Initialize the Library

Once you’ve installed the framework, just import the header file like following:

    :::c
    #import "TreasureData-iOS-SDK/TreasureData.h"

Next, please initialize the library in your app delegate’s `application:applicationDidBecomeActive:` method:

    :::c
    - (void)applicationDidBecomeActive:(UIApplication *)application {
      [TreasureData initializeWithApiKey:@"YOUR_API_KEY"];

      // NOTE: This is optional, but you can encrypt the buffered data on
      // mobile devices. You can prevent people from checking the buffered
      // events on the disk.
      // [TreasureData initializeEncryptionKey:@"RANDOM_STRING_TO_ENCRYPT_DATA"];
    }

The apikey can be retrieved from the console ([click here](https://console.treasuredata.com/users/current)). It's recommended to use **write-only API key** for SDKs. <a href="mailto:support@treasure-data.com">Let us know</a> if you’re having any build issues.

## Step 3: Send Events to the Cloud

Next, please call addEvent() function at the appropriate timing within your applications. This example sends the event to table `table_b` within database `database_a`, when the button was clicked.

    :::c
    - (IBAction)clickButton:(id)sender {
      [[TreasureData sharedInstance] addEvent:@{
        @"name": @"foo bar",
        @"age": @42,
        @"comment": @"hello world"
      }
      database:@"database_a"
      table:@"table_b"];
    }

By default, all events will be bufferred to the file. You **need to explicitly flush** the bufferred data to the cloud. It won't be uploaded automatically.

The following code uploads the event when the application goes to the background, which is a fairly common pattern across our customers. You can do this whenever you like. The uploader doesn't block the main UI thread.

    :::c
    - (void)applicationDidEnterBackground:(UIApplication *)application {
      [[TreasureData sharedInstance] uploadEventsWithBlock:^(void) {
        NSLog(@"Uploaded.");
      }];
    }

NOTE: IP whitelist won't be applied to any import from iOS SDK. Also we've seen a lot of cases where a lot of iOS devices have an invalid timestamp (like 1970/01/01), so we're currently ignoring the log which has a timestamp older than 7 days, and newer than 3 days ahead.

## Next Steps

For the transparency, we're open sourcing our iOS SDK on Github. Please check the repository if necessary.

* [https://github.com/treasure-data/td-ios-sdk](https://github.com/treasure-data/td-ios-sdk)

If you need additional help, get support at <a href="http://help.treasuredata.com/" target="_blank">help.treasuredata.com</a>.
