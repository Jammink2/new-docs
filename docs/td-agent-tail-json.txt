# Tailing JSON Formatted Logs

This article explains how to tail JSON formatted logs from td-agent, to continuously import the access logs into the cloud.

## Installing td-agent

'td-agent' needs to be installed on your application servers. td-agent is a daemon program dedicated to the streaming upload of any kind of the time-series data. td-agent is developed and maintained by Treasure Data, Inc.

<center><img src="/images/td-agent-tail.png" width="100%" /></center><br /><br />

To set up td-agent, please refer to the following articles; we provide deb/rpm packages for Linux systems.

<table>
  <tr>
    <th>If you have...</th>
    <th>Please refer to...</th>
  </tr>
  <tr>
    <td>MacOS X</td>
    <td><a href="http://docs.fluentd.org/articles/install-by-dmg">Installing td-agent on MacOS X</a></td>
  </tr>
  <tr>
    <td>Ubuntu System</td>
    <td><a href="http://docs.fluentd.org/articles/install-by-deb">Installing td-agent for Debian and Ubuntu</a></td>
  </tr>
  <tr>
    <td>RHEL / CentOS System</td>
    <td><a href="http://docs.fluentd.org/articles/install-by-rpm">Installing td-agent for Redhat and CentOS</a></td>
  </tr>
  <tr>
    <td>Joyent SmartOS</td>
    <td><a href="http://help.treasuredata.com/customer/portal/articles/1246933-installing-td-agent-on-joyent-smartos">Installing fluentd + td plugin on Joyent SmartOS</a></td>
  </tr>
  <tr>
    <td>AWS Elastic Beanstalk</td>
    <td><a href="https://github.com/treasure-data/elastic-beanstalk-td-agent">Installing td-agent on AWS Elastic Beanstalk</a></td>
  </tr>
</table>

NOTE: td-agent is fully open-sourced under the <a href="http://fluentd.org/">fluentd project</a>. td-agent extends fluentd with custom plugins for Treasure Data.

## Modifying /etc/td-agent/td-agent.conf

Next, please specify your authentication key by setting the `apikey` option. You can view your api key from the [console](https://console.treasuredata.com/users/current). Next, please set the `apikey` option in your td-agent.conf file. 

Note: *YOUR_API_KEY* should be your actual apikey string.

    :::text
    # Tailing the JSON formatted Logs
    <source>
      type tail
      format json
      tag td.production.foo
      path /path/to/the/file/foo.json
      pos_file /var/log/td-agent/foo.pos
    </source>
    
    # Treasure Data Input and Output
    <match td.*.*>
      type tdlog
      apikey YOUR_API_KEY
      auto_create_table
      buffer_type file
      buffer_path /var/log/td-agent/buffer/td
      use_ssl true
    </match>

Please restart your agent once these lines are in place.

    :::term
    $ sudo /etc/init.d/td-agent restart

td-agent will now tail the file, buffer it (*var/log/td-agent/buffer/td*), and automatically upload it into the cloud.

## Confirming Data Import

Here is a sample log file. Every time a new line is appended to the log file, td-agent parses the line and adds it to its buffer. td-agent uploads the data into the cloud every 5 minutes; to upload the data immediately, please send a SIGUSR1 signal.

    :::js
    $ tail -n 5 /path/to/the/file/foo.json
    {"a"=>"b", "c"=>"d"}
    {"a"=>"b", "c"=>"d", "e"=>1}
    {"a"=>"b", "c"=>"d", "e"=>1, "f"=>2.0}
    {"a"=>"b", "c"=>"d"}
    {"a"=>"b", "c"=>"d", "e"=>1}

Issue the commands below to confirm that everything is configured correctly.

    :::term
    # append new entries
    $ tail -n 3 /path/to/the/file/foo.json > sample.txt # take the last three lines of the log...
    $ cat sample.txt >>/path/to/the/file/foo.json       # and append them to the buffer file to trigger the tail plugin.
    
    # flush the buffer
    $ kill -USR1 `cat /var/run/td-agent/td-agent.pid`

NOTE: <b>td-agent handles log-rotation</b>. td-agent keeps a record of the last position of the log, ensuring that each line is read exactly once even if the td-agent process goes down. However, since the information is kept in a file, the "exactly once" guarantee breaks down if the file becomes corrupted. 

To confirm that your data has been uploaded successfully, issue the `td tables` command as shown below.

    :::term
    $ td tables
    +------------+------------+------+-----------+
    | Database   | Table      | Type | Count     |
    +------------+------------+------+-----------+
    | production | foo        | log  | 3         |
    +------------+------------+------+-----------+

Please check `/var/log/td-agent.log` if it's not working correctly. `td-agent:td-agent` needs to have a permission to read the logs.

## Next Steps

We offer a schema mechanism that is more flexible than that of traditional RDBMSs. For queries, we leverage the Hive Query Language.

* [Schema Management](schema)
* [Hive Query Language](hive)
* [Programmatic Access with REST API and its Bindings](/categories/api)

For more specific assistance, please visit our support center:

* [Treasure Data Support Center](http://help.treasuredata.com/)
