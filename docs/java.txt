# Logging from Java Applications

In order to import Java application logs to Treasure Data, we provide a specialized logger library '[td-logger-java](http://github.com/treasure-data/td-logger-java)'.

This guide will explain how to import application logs from Java logger library.

## Prerequisites

  * Basic knowledge of Java, and Maven2
  * Basic knowledge of Treasure Data, including the latest installed version of the toolbelt.
  * An installed version of Java 6 or higher to test locally

## Install the td-agent

At first, you need to setup 'td-agent' on your application servers. ‘td-agent’ is a daemon program dedicated to the continuous upload of any kind of streaming log data. td-agent is developed and maintained by Treasure Data, Inc.

Through [td-logger-java](http://github.com/treasure-data/td-logger-java) library, Java applications can post their application logs to local td-agent, and it uploads to the cloud every 5 minutes.

Please refer to the following articles in setting up td-agent. For Linux systems, we're providing deb/rpm packages for the easy installation.

<table>
  <tr>
    <th>If you have...</th>
    <th>Please look at...</th>
  </tr>
  <tr>
    <td>Debian / Ubuntu System</td>
    <td><a href="http://treasure-data.tenderapp.com/kb/installing-td-agent-daemon/installing-td-agent-for-debian-and-ubuntu">Installing td-agent for Debian and Ubuntu</a></td>
  </tr>
  <tr>
    <td>Redhat / CentOS System</td>
    <td><a href="http://treasure-data.tenderapp.com/kb/installing-td-agent-daemon/installing-td-agent-for-redhat-and-centos">Installing td-agent for Redhat and CentOS</a></td>
  </tr>
</table>

NOTE: Please note that td-agent is fully open-sourced as the <a href="http://github.com/fluent/">fluentd project</a>. td-agent is a package which contains fluentd and extension plugins for Treasure Data.

## Modify /etc/td-agent/td-agent.conf

We’ll also need to set the `apikey` option, which is a secret key to authenticate our account. Our api key can be shown by *td apikey:show*, as long as we have successfully authenticated our account using the ‘td account’ command.:

    :::term
    $ td apikey:show
    3b7118fd3ad7e35bbd3c0e4f607ec7263aa93c30

Let’s set the `apikey` option in our td-agent.conf file. Please replace *YOUR_API_KEY* to your actual apikey string.

    :::term
    # Treasure Data Input and Output
    <source>
      type forward
      port 24224
    </source>
    <match td.*.*>
      type tdlog
      apikey YOUR_API_KEY
      auto_create_table
      buffer_type file
      buffer_path /var/log/td-agent/buffer/td
    </match>

Once these lines are in place, we’ll restart our agent.

    :::term
    $ sudo /etc/init.d/td-agent restart

We have now enabled td-agent to read, and upload our log data into the cloud via port 24224.

## Use td-logger-java

[td-logger-java](http://github.com/treasure-data/td-logger-java) is a Java library to record events to td-agent from a Java application. First, please add those lines to pom.xml. Please find the latest version from [CHANGES.txt](https://github.com/treasure-data/td-logger-java/blob/master/CHANGES.txt).

    :::term
    <dependencies>
      ...
      <dependency>
        <groupId>com.treasure_data</groupId>
        <artifactId>td-logger</artifactId>
        <version>${logger.version}</version>
      </dependency>
      ...
    </dependencies>
    
    <repositories>
      <repository>
        <id>treasure-data.com</id>
        <name>Treasure Data's Maven2 Repository</name>
        <url>http://treasure-data.com/maven2</url>
      </repository>
      <repository>
        <id>fluentd.org</id>
        <name>Fluentd's Maven2 Repository</name>
        <url>http://fluentd.org/maven2</url>
      </repository>
    </repositories>

Then, please prepare your *treasure-data.properties* file.

    :::term
    td.logger.agentmode=true
    td.logger.agent.host=localhost
    td.logger.agent.port=24224

Finally, please insert the logging code into your applications like followings. Further details regarding the event logger API can be found [here](https://github.com/treasure-data/td-logger-java).

    :::java
    import com.treasure_data.logger.TreasureDataLogger;
    public class Main {
        private static TreasureDataLogger LOG;
        static {
            try {
                Properties props = System.getProperties();
                props.load(Main.class.getClassLoader().getResourceAsStream("treasure-data.properties"));
                LOG = TreasureDataLogger.getLogger("test_db");
            } catch (IOException e) {
                // do something
            }
        }
        public void doApp() {
            Map<String, Object> data = new HashMap<String, Object>();
            data.put("from", "userA");
            data.put("to", "userB");
            LOG.log("follow", data);
        }
    }

## Confirm the Import

The posted logs are first transferred to the local td-agent. td-agent buffers the logs for a while, and uploads them every 5 minutes.

Rather than waiting 5 minutes, sending SIGUSR1 signal to the agent flushes its buffer and it starts uploading immediately.

    :::term
    $ java -jar test.jar
    $ sudo killall -SIGUSR1 td-agent

To confirm the data upload, please use *td tables*.

    :::term
    $ td tables
    +------------+------------+------+-----------+
    | Database   | Table      | Type | Count     |
    +------------+------------+------+-----------+
    | test_db    | follow     | log  | 1         |
    +------------+------------+------+-----------+
