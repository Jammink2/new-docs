# Treasure Data JavaScript SDK

This article will help you start sending the data from website to Treasure Data, using our JavaScript SDK library. This way, you don't have to install anything server-side to track website activities.

## Prerequisites

  * Basic knowledge of JavaScript / HTML.
  * Basic knowledge of Treasure Data.

## How to install JavaScript SDK?

This video demonstrates how to install JavaScript SDK in 3 minutes.

<iframe width="780" height="525" src="//www.youtube-nocookie.com/embed/0bbxUzPKH3E?rel=0&theme=light&modestbranding=1&showinfo=0" frameborder="1" allowfullscreen></iframe>

### Step 1: Install the Library

Install the td-js-sdk on your page by copying-pasting the JavaScript snippet below into your page's `<head>` tag:

    :::html
    <!-- Treasure Data -->
    <script type="text/javascript">
    !function(t,e){if(void 0===e[t]){e[t]=function(){e[t].clients.push(this),this._init=[Array.prototype.slice.call(arguments)]},e[t].clients=[];for(var r=function(t){return function(){return this["_"+t]=this["_"+t]||[],this["_"+t].push(Array.prototype.slice.call(arguments)),this}},s=["addRecord","set","trackEvent","trackPageview","ready"],n=0;n<s.length;n++){var i=s[n];e[t].prototype[i]=r(i)}var a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=("https:"===document.location.protocol?"https:":"http:")+"//s3.amazonaws.com/td-cdn/sdk/td-1.4.0.js";var c=document.getElementsByTagName("script")[0];c.parentNode.insertBefore(a,c)}}("Treasure",this);
    </script>

### Step 2: Initialize & Send Events to the Cloud

You need to create one `Treasure` client object per database, and initialize pageview tracking by calling the `trackPageview()` function. The APIKEY can be retrieved from the [Console's profile page](<%= @env[:url_profile] %>). It's recommended to use [**write-only API key**](access-control#rest-apis-access) for SDKs. Each event will fire off asynchronously.

    :::html
    <script type="text/javascript">
      // Configure an instance for your database
      var td = new Treasure({
        host: '<%= @env[:sdk_endpoint] %>',
        writeKey: 'YOUR_WRITE_ONLY_APIKEY_IS_HERE',
        database: 'DATABASE_NAME'
      });
      // track pageview information to 'pageviews' table
      td.trackPageview('pageviews');
    </script>

NOTE: IP whitelist won't be applied to any import from JavaScript SDK. We have also seen a lot of cases where browsers specify invalid timestamps (like 1970/01/01), so we're currently ignoring records which have a timestamp older than 7 days, and newer than 3 days ahead.

By calling `trackPageview()` function, these parameters will automatically gets logged.

- td_version - td-js-sdk's version
- td_client_id - client's uuid
- td_charset - character set
- td_language - browser language
- td_color - screen color depth
- td_screen - screen resolution
- td_viewport - viewport size
- td_title - document title
- td_url - document url
- td_host - document host
- td_path - document pathname
- td_referrer - document referrer
- td_ip - request IP (server)
- td_browser - client browser (server)
- td_browser_version - client browser version (server)
- td_os - client operating system (server)
- td_os_version - client operating system version (server)

If you want to set the custom parameters, please use `td.set()` function.

    :::html
    // track pageview information to 'pageviews' table
    td.set('pageviews', {foo: 'foo', bar: 'bar'});
    td.trackPageview('pageviews');

### Step 3: Track Custom Events

You can also track your custom events in addition to page views by using `trackEvent()` function. In the example below, `button` will be the name of table where events get logged. You can pass additional information/context to the event as an argument.

    :::html
    var buttonEvent2 = function () {
      td.trackEvent('button', {
        number: 1
      });
      // doButtonEvent(1);
    };

## Appendix: Google Tag Manager

Treasure Data JavaScript SDK works well with [Google Tag Manager](http://www.google.com/tagmanager/). Inside your container, please create a new tag as `Custom HTML Tag`.

<center><img src="/images/google-tag-manager.png" width="100%" /></center><br/><br/>

And please put these lines into `Configure Tag` section, with your [**write-only API key**](access-control#rest-apis-access) and database name.

    :::term
    <!-- Treasure Data -->
    <script type="text/javascript">
    !function(t,e){if(void 0===e[t]){e[t]=function(){e[t].clients.push(this),this._init=[Array.prototype.slice.call(arguments)]},e[t].clients=[];for(var r=function(t){return function(){return this["_"+t]=this["_"+t]||[],this["_"+t].push(Array.prototype.slice.call(arguments)),this}},s=["addRecord","set","trackEvent","trackPageview","ready"],n=0;n<s.length;n++){var i=s[n];e[t].prototype[i]=r(i)}var a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=("https:"===document.location.protocol?"https:":"http:")+"//s3.amazonaws.com/td-cdn/sdk/td-1.4.0.js";var c=document.getElementsByTagName("script")[0];c.parentNode.insertBefore(a,c)}}("Treasure",this);
      // Configure an instance for your database
      var td = new Treasure({
        host: 'in.treasuredata.com',
        writeKey: 'YOUR_WRITE_ONLY_APIKEY_IS_HERE',
        database: 'DATABASE_NAME'
      });
      // track pageview information to 'pageviews' table
      td.trackPageview('pageviews');
    </script>

## Appendix: API Endpoint

JavaScript SDK is hitting our REST API endpoint to import the data. Note that this will take 1 minutes to reflect in the database because of the server-side buffering.

    :::terminal
    # Single Record
    $ curl -X POST
        -H 'Content-Type: application/json'
        -H 'X-TD-Write-Key: your_write_apikey' \
        --data-binary '{"name":"komamitsu", "num":1234}' \
        http://<%= @env[:sdk_endpoint] %>/js/v3/event/your_db/your_table

    # Multiple Records
    $ curl -X POST
        -H 'Content-Type: application/json'
        -H 'X-TD-Write-Key: your_write_apikey' \
        -H 'X-TD-Data-Type: k'
        --data-binary '{"your_db.your_table":[{"time":1403147720, "name":"komamitsu", "age":41},{"time":1403147721, "name":"kzk", "age":29}]}' \
        http://<%= @env[:sdk_endpoint] %>/js/v3/event

NOTE: "X-TD-Data-Type: k", Event collector handles several data types. ‘k’ is one of them. It can handle multiple records.

NOTE: When you try the above example, please change time value to current unixtime value, we're currently ignoring records which have a timestamp older than 7 days, and newer than 3 days ahead.

## Next Steps

For transparency, we're open sourcing our JavaScript SDK on Github. Please check the repository if necessary. The README contains the full description of JavaScript SDK API. There're some additional APIs to track custom events etc.

* [https://github.com/treasure-data/td-js-sdk](https://github.com/treasure-data/td-js-sdk)
