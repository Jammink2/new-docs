# Storing Logs via Scribe Protocol

td-agent understands the Scribe protocol (Thrift-based). It can also co-exist or replace your existing Scribe infrastructure.

## Prerequisites

  * Basic knowledge of Treasure Data, including the [toolbelt](http://toolbelt.treasuredata.com).
  * Basic knowledge of [td-agent](/articles/td-agent).

## Using Scribe input

The configuration below enables the Scribe input plugin:

    :::text
    <source>
      type scribe
      port 1463
    </source>

The `category` field of the Scribe protocol is used as a `tag` for td-agent. If you want to store your data in the www_access table within the test_db database, please send your LogEntry as shown below (Ruby example).

    :::ruby
    entry = LogEntry.new
    entry.category = 'td.test_db.www_access'
    entry.message = 'abcde'
    client.Log([entry])

This message is organized as shown below.

    :::js
    {
      message => 'abcde'
    }

## Message as JSON string

The message field of semi-structured data often contains JSON strings. td-agent uses the *msg_format* option to parse the JSON string in-place.

    :::text
    <source>
      type scribe
      port 1463
      msg_format json
    </source>

Next, please send records as shown below. Please note that entry.message is a JSON string.

    :::ruby
    entry = LogEntry.new
    entry.category = 'td.test_db.www_access'
    entry.message = {'a' => 'b', 'c' => d}.to_json
    client.Log([entry])

This message is organized as shown below.

    :::js
    {
      'a' => 'b',
      'c' => 'd',
    }

## Other Formats

The *msg_format* option supports `text`, `json`, and `url_param`. The format for `url_param` is as follows.

    :::text
    key1=val1&key2=val2&key3=val3

## Further Reading

For more information regarding the Scribe input plugin, please refer to the document below. The plugin also supports Scribe *output*.

* [fluent-plugin-scribe](https://github.com/fluent/fluent-plugin-scribe)
