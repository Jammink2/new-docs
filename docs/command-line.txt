# Treasure Data Toolbelt: Command-line Interface

The Treasure Data CLI (or Toolbelt) allows you to create databases and tables, [import](bulk-import)/[export](bulk-export) data into/from the tables, set and modify the table schema, issue queries, monitor job status, view and download job results, create schedule queries, and much more.


## Step 1: Installation & Update

Install the [Treasure Data Toolbelt](http://toolbelt.treasuredata.com/) to set up your local workstation with `td`, the Treasure Data command-line client. Please refer to the [Installing the Treasure Data CLI](installing-the-cli) documentation page for information on how to install the CLI in various environments.

The page also contains important information about [Updating](installing-the-cli#upgrading) the `td CLI`.

## Step 2: Authorize

Once you have installed the toolbelt, you will have access to the `td` command from your command line. Authorize your account with the `td account` command. Please use the user name and password you used when signing up when prompted.

    :::term
    $ td -e https://<%= @env[:api_endpoint] %> account -f
    Email: user@domain.com
    Password (typing will be hidden):
    Authenticated successfully.


## Step 3: Query the Sample Dataset

Letâ€™s issue a SQL query. Out of the box, we have a table called www_access in the dabase called sample_db. The following query calculates the distribution of HTTP status codes.

    :::term
    $ td query -w -d sample_db \
      "SELECT code, COUNT(1) AS cnt FROM www_access GROUP BY code"
    queued...
    started at 2012-04-10T23:44:41Z
    2012-04-10 23:43:12,692 Stage-1 map = 0%,  reduce = 0%
    2012-04-10 23:43:18,766 Stage-1 map = 100%,  reduce = 0%
    2012-04-10 23:43:29,925 Stage-1 map = 100%,  reduce = 33%
    2012-04-10 23:43:32,973 Stage-1 map = 100%,  reduce = 100%
    Status     : success
    Result     :
    +------+------+
    | code | cnt  |
    +------+------+
    | 404  | 17   |
    | 500  | 2    |
    | 200  | 4981 |
    +------+------+

The command above will take about 15-45 seconds, owing mainly to the overhead in setting up jobs within the cloud-based MapReduce engine.


## Step 4: Import Data Into A Table

You're now ready to import **your real data** to the cloud! The following tutorials will explain how to import your data (e.g. Application Logs, Middleware Logs) from various sources. For a deeper understanding of the platform, please refer to the [architecture overview article](architecture-overview).

### CLI

This example shows how to use the CLI to generate a sample apache log in json format and import it into a brand new table in the 'sample_db' database.

    :::term
    $ td sample:apache sample_apache.json
    $ td table:import sample_db sample_tbl \
      --auto-create-table -f json sample_apache.json

### Languages and Frameworks
<table>
  <tr>
    <th colspan="3">Supported Languages</th>
    <tr>
      <td style="text-align: left; width: 33%;"><a href="ruby">Ruby</a> or <a href="rails">Rails</a></td>
      <td style="text-align: left;"><a href="java">Java</a></td>
      <td style="text-align: left;"><a href="perl">Perl</a></td>
    </tr>
    <tr>
      <td style="text-align: left; width: 33%;"><a href="python">Python</a></td>
      <td style="text-align: left;"><a href="php">PHP</a></td>
      <td style="text-align: left;"><a href="scala">Scala</a></td>
    </tr>
    <tr>
      <td style="text-align: left;"><a href="nodejs">Node.js</a></td>
    </tr>
  </tr>
</table>

### Middleware
* [Apache Logs](analyzing-apache-logs)
* [Tailing Existing CSV or TSV Logs](td-agent-tail-ctltsv)

## Additional Help

Running `td help:all` shows the commands available in Treasure Data:

    :::term
    $ td help:all

      database:list             # Show list of tables in a database
      database:show <db>        # Describe a information of a database
      database:create <db>      # Create a database
      database:delete <db>      # Delete a database

      ....

If you want more information about individual commands, you can run `td help <command>:<subcommand>`, e.g.,

    :::term
    $ td help table:list
    usage:
      $ td table:list [db]

    example:
      $ td table:list
      $ td table:list example_db
      $ td tables

    description:
      Show list of tables

    options:
      -n, --num_threads VAL            number of threads to get list in parallel
          --show-bytes                 show estimated table size in bytes

See the [td command line tool reference](td-cli) page for a complete list of commands and their helpers.
