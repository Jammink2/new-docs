# Streaming Import from Perl Applications

'[fluent-logger-perl](http://github.com/fluent/fluent-logger-perl)' is used to import data from Perl applications to Treasure Data. 

This article explains how to use the fluent-logger-perl library.

## Prerequisites

  * Basic knowledge of Perl and CPAN.
  * Basic knowledge of Treasure Data, including the latest installed version of the [toolbelt](http://toolbelt.treasuredata.com).
  * Perl 5.10 or higher (for local testing).

## Installing td-agent

fluent-logger-perl requires 'td-agent' to be installed on your application servers. td-agent is a daemon program dedicated to the streaming upload of any kind of the time-series data. td-agent is developed and maintained by Treasure Data, Inc.

<center><img src="/images/td-agent-app.png" width="100%" /></center><br /><br />

The [fluent-logger-perl](http://github.com/fluent/fluent-logger-perl) library enables Perl applications to post records to their local td-agent. td-agent in turn uploads the data to the cloud every 5 minutes. Because the daemon runs on a local node, the logging latency is negligible.

To install Treasure Agent (`td-agent`), please execute one of the command below based on your environment. The agent program will be installed automatically by using the package management software for each platform like rpm/deb/dmg.

#### MacOS X 10.8,10.9 (<a target="_blank" href="http://docs.fluentd.org/articles/install-by-dmg">documentation</a>)

    :::term
    $ open 'http://packages.treasuredata.com/2/macosx/td-agent-2.0.3-0.dmg'

#### RHEL/CentOS 5,6 (<a target="_blank" href="http://docs.fluentd.org/articles/install-by-rpm">documentation</a>)

    :::term
    $ curl -L http://toolbelt.treasuredata.com/sh/install-redhat.sh | sh

#### Ubuntu 10.04,12.04 (<a target="_blank" href="http://docs.fluentd.org/articles/install-by-deb">documentation</a>)

    :::term
    # 10.04 Lucid
    $ curl -L http://toolbelt.treasuredata.com/sh/install-ubuntu-lucid.sh | sh
    
    # 12.04 Precise
    $ curl -L http://toolbelt.treasuredata.com/sh/install-ubuntu-precise.sh | sh

[Joyent SmartOS](http://help.treasuredata.com/customer/portal/articles/1246933-installing-td-agent-on-joyent-smartos) and <a href="https://github.com/treasure-data/elastic-beanstalk-td-agent">AWS Elastic Beanstalk</a> are also supported.

## Modifying /etc/td-agent/td-agent.conf

Next, please specify your API key by setting the `apikey` option. You can view your api key from the [console](https://console.treasuredata.com/users/current). Next, please set the `apikey` option in your td-agent.conf file. 

    :::text
    # Treasure Data Input and Output
    <source>
      type forward
      port 24224
    </source>
    <match td.*.*>
      type tdlog
      apikey YOUR_API_KEY
      auto_create_table
      buffer_type file
      buffer_path /var/log/td-agent/buffer/td
      use_ssl true
    </match>

NOTE: <i>YOUR_API_KEY</i> should be your actual apikey string. You can retrieve your api key from <a href="https://console.treasuredata.com/users/current" target="_blank">HERE</a>. Using the write-only key is recommended.

Please restart your agent once these lines are in place.

    :::term
    # Linux
    $ sudo /etc/init.d/td-agent restart
    
    # MacOS X
    $ sudo launchctl unload /Library/LaunchDaemons/td-agent.plist
    $ sudo launchctl load /Library/LaunchDaemons/td-agent.plist

td-agent will now accept data via port 24224, buffer it (*var/log/td-agent/buffer/td*), and automatically upload it into the cloud.

## Using fluent-logger-perl

First, install the *Fluent::Logger* library via CPAN.

    :::term
    $ cpan
    cpan[1]> install Fluent::Logger

Next, initialize and post the records as follows.

#### test.pl

    :::perl
    use Fluent::Logger;
    my $logger = Fluent::Logger->new(
        host => '127.0.0.1',
        port => 24224,
        tag_prefix => 'td.test_db',
    );
    $logger->post("test_table", { "entry1" => "value1", "entry2" => 2 });

## Confirming Data Import

First, please execute the program above.

    :::term
    $ perl test.pl

Sending a SIGUSR1 signal will flush td-agent's buffer; upload will start immediately.

    :::term
    # Linux
    $ kill -USR1 `cat /var/run/td-agent/td-agent.pid`
    
    # MacOS X
    $ sudo kill -USR1 `sudo launchctl list | grep td-agent | cut -f 1`

To confirm that your data has been uploaded successfully, issue the *td tables* command as shown below.

    :::term
    $ td tables
    +------------+------------+------+-----------+
    | Database   | Table      | Type | Count     |
    +------------+------------+------+-----------+
    | test_db    | test_table | log  | 1         |
    +------------+------------+------+-----------+

NOTE: The first argument of post() determines the database name and table name. If you specify `td.test_db.test_table`, the data will be imported into the table *test_table* within the database *test_db*. They are automatically created at upload time.

## Production Deployments

### High-Availablability Configurations of td-agent

For high-traffic websites (more than 5 application nodes), we recommend using a high availability configuration of td-agent. This will improve data transfer reliability and query performance.

* [High-Availability Configurations of td-agent](td-agent-high-availability)

### Monitoring td-agent

Monitoring td-agent itself is also important. Please refer to this document for general monitoring methods for td-agent.

* [Monitoring td-agent](td-agent-monitoring)

NOTE: td-agent is fully open-sourced under the <a href="http://fluentd.org/">fluentd project</a>.

## Next Steps

We offer a schema mechanism that is more flexible than that of traditional RDBMSs. For queries, we leverage the Hive Query Language.

* [Schema Management](schema)
* [Hive Query Language](hive)
* [Programatic Access with REST API and its Bindings](/categories/api)

For more specific assistance, please visit our support center:

* [Treasure Data Support Center](http://help.treasuredata.com/)
