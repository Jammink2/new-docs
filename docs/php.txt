# Logging from PHP Applications

In order to import PHP application logs to Treasure Data, we provide a specialized logger library '[fluent-logger-php](http://github.com/fluent/fluent-logger-php)'.

This guide will explain how to import application logs from PHP logger library.

## Prerequisites

  * Basic knowledge of PHP
  * Basic knowledge of Treasure Data, including the latest installed version of the toolbelt.
  * An installed version of PHP 5.3 or higher to test locally

## Install the td-agent

At first, you need to setup 'td-agent' on your application servers. ‘td-agent’ is a daemon program dedicated to the continuous upload of any kind of streaming log data. td-agent is developed and maintained by Treasure Data, Inc.

Through [fluent-logger-php](http://github.com/fluent/fluent-logger-php) library, PHP applications can post their application logs to local td-agent, and it uploads to the cloud every 5 minutes.

Please refer to the following articles in setting up td-agent. For Linux systems, we're providing deb/rpm packages for the easy installation.

<table>
  <tr>
    <th>If you have...</th>
    <th>Please look at...</th>
  </tr>
  <tr>
    <td>Debian / Ubuntu System</td>
    <td><a href="http://treasure-data.tenderapp.com/kb/installing-td-agent-daemon/installing-td-agent-for-debian-and-ubuntu">Installing td-agent for Debian and Ubuntu</a></td>
  </tr>
  <tr>
    <td>Redhat / CentOS System</td>
    <td><a href="http://treasure-data.tenderapp.com/kb/installing-td-agent-daemon/installing-td-agent-for-redhat-and-centos">Installing td-agent for Redhat and CentOS</a></td>
  </tr>
</table>

NOTE: Please note that td-agent is fully open-sourced as the <a href="http://github.com/fluent/">fluentd project</a>. td-agent is a package which contains fluentd and extension plugins for Treasure Data.

## Modify /etc/td-agent/td-agent.conf

We’ll also need to set the `apikey` option, which is a secret key to authenticate our account. Our api key can be shown by *td apikey:show*, as long as we have successfully authenticated our account using the ‘td account’ command.:

    :::term
    $ td apikey:show
    3b7118fd3ad7e35bbd3c0e4f607ec7263aa93c30

Let’s set the `apikey` option in our td-agent.conf file. Please replace *YOUR_API_KEY* to your actual apikey string.

    :::term
    # Treasure Data Input and Output
    <source>
      type forward
      port 24224
    </source>
    <match td.*.*>
      type tdlog
      apikey YOUR_API_KEY
      auto_create_table
      buffer_type file
      buffer_path /var/log/td-agent/buffer/td
    </match>

Once these lines are in place, we’ll restart our agent.

    :::term
    $ /etc/init.d/td-agent restart

We have now enabled td-agent to read, and upload our log data into the cloud via port 24224.

## Using fluent-logger-php

[fluent-logger-php](http://github.com/fluent/fluent-logger-php) is a PHP library to record events to td-agent from a PHP application. At first, please copy the library itself into your project directory.

    :::term
    $ git clone https://github.com/fluent/fluent-logger-php.git
    $ cp -r src/Fluent <path/to/your_project>

Then, please initialize and post the event as follows.

    :::php
    <?php
    require_once __DIR__.'/src/Fluent/Autoloader.php';
    use Fluent\Logger\FluentLogger;
    Fluent\Autoloader::register();
    $logger = new FluentLogger("localhost", 24224);
    $logger->post("td.test_db.test_table", array("hello"=>"world"));


At first, the posted logs are first transferred to the local td-agent. td-agent buffers the logs for a while, and uploads them every 5 minutes.

NOTE: The first argument of post() determines the database name and table name. If you specify 'td.test_db.test_table', the data will be imported into *test_table* table within *test_db* database. Those are automatically created at the upload time.

Rather than waiting 5 minutes, sending SIGUSR1 signal to the agent flushes its buffer and it starts uploading immediately. To confirm the data upload, please use *td tables*.

    :::term
    # logging & buffer flush
    $ php test.php
    $ sudo killall -SIGUSR1 td-agent

    # confirm upload
    $ td tables
    +------------+------------+------+-----------+
    | Database   | Table      | Type | Count     |
    +------------+------------+------+-----------+
    | testdb     | test_table | log  | 1         |
    +------------+------------+------+-----------+

## Production Deployment Preferences

### Use Apache / mod_php

Other deployment option is not well tested.

### Set MaxRequestsPerChild

[fluent-logger-php](http://github.com/fluent/fluent-logger-php) sends application logs to td-agent, via persistent socket connection. If you use mod_php, the connection is reused across multiple requests.

Anyway, it's still recommended to periodically exit your PHP processes, by setting *MaxRequestsPerChild* in your apache conf (*NOT* zero).
