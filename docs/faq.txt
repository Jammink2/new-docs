# Frequently Asked Questions

Here are some questions frequently asked by our users.

## How can I write out query results into X? (ex: How can I write query results into MySQL?)

Treasure Data provides the ability to write query results into various datastores such as Treasure Data, MySQL and PostgreSQL. The list of currently supported output options can be found [here](/categories/result).

## It looks like Treasure Data uses Hive. Does this mean I have to worry about schema changes?

Treasure Data supports HiveQL semantics, but unlike Apache Hive, we allow the user to set and modify the schema at any time. We do not require table schema to be defined upfront. For more information, please refer to [this document](/articles/schema).

## How can I handle nested JSON records?

Nested JSON records can be parsed by using the [get_json_object UDF](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF) command with HiveQL. However, we recommend that you maintain a flat JSON structure since this command is a source of additional performance overhead.

## How can I use the td command through a proxy?

Please set the HTTP_PROXY variable. This is supported starting in td v0.10.41.

    :::term
    e.g.
    Windows:
    $ set HTTP_PROXY=http://proxy_host:8080
    Other:
    $ export HTTP_PROXY="proxy_host:8080"

## I cannot import my data to Treasure Data. Can you help?

Sorry to hear that. Here are a couple of scenarios that we can think of.

    1. Make sure your network is alive and allow you to access external networks.
    2. Does your data have numbers greater than 2e64? If so, please upgrade your td command/td-agent to the latest version. If you are using fluentd instead, please upgrade fluent-plugin-td to version 0.10.15 or above.

## Treasure Agent sometimes gets "Failed to upload to TreasureData: Import failed" error. Is it a serious problem?

There are several reasons:

    1. Your network becomes unstable
    2. Treasure Data's API shutdown the connection by unexpected network / node condition

But Treasure Agent has robust retry mechanism for these cases, so continue to import the data to Treasure Data.
You can see "retry succeeded" in your logs after several retries. It is no problem.

If continue to get same error and exceeds the retry limit, it is non-network problem. Please let me know.

## When I query my table, I get "null" for some of my integer values. Is this a bug?

Is your integer greater than or equal to 2e64? If it is, then you need to cast it as `decimal` like this:

    :::bash
    SELECT CAST(my_huge_number AS DECIMAL) FROM tbl...


## Hive's reserved keywords (Why do I get a warning about reserved keywords?)

Treasure Data uses Hive as a querying language. One of Hive's limitations is that a table name cannot be a reserved keyword. Thus, if your table (or database) name is identical to a reserved keyword, you won't be able to query data in that table (or database).

For example if you create an 'items' table and store data in it, you won't be able to execute the following hive query, because 'items' is a reserved keyword in Hive.

    :::sql
    SELECT v FROM items

The following are the reserved keywords in Hive:

    :::term
    TRUE, FALSE, ALL, AND, OR, NOT, LIKE, ASC, DESC, ORDER, BY, GROUP, WHERE,
    FROM, AS, SELECT, DISTINCT, INSERT, OVERWRITE, OUTER, JOIN, LEFT, RIGHT,
    FULL, ON, PARTITION, PARTITIONS, TABLE, TABLES, TBLPROPERTIES, SHOW, MSCK,
    DIRECTORY, LOCAL, LOCKS, TRANSFORM, USING, CLUSTER, DISTRIBUTE, SORT, UNION, LOAD,
    DATA, INPATH, IS, NULL, CREATE, EXTERNAL, ALTER, DESCRIBE, DROP, REANME, TO,
    COMMENT, BOOLEAN, TINYINT, SMALLINT, INT, BIGINT, FLOAT, DOUBLE, DATE,
    DATETIME, TIMESTAMP, STRING, BINARY, ARRAY, MAP, REDUCE, PARTITIONED,
    CLUSTERED, SORTED, INTO, BUCKETS, ROW, FORMAT, DELIMITED, FIELDS, TERMINATED,
    COLLECTION, ITEMS, KEYS, LINES, STORED, SEQUENCEFILE, TEXTFILE, INPUTFORMAT,
    OUTPUTFORMAT, LOCATION, TABLESAMPLE, BUCKET, OUT, OF, CAST, ADD, REPLACE,
    COLUMNS, RLIKE, REGEXP, TEMPORARY, FUNCTION, EXPLAIN, EXTENDED, SERDE, WITH,
    SERDEPROPERTIES, LIMIT, SET, TBLPROPERTIES

If you encounter a reserved keyword issue in your query, please wrap the infringing keyword with '`' as shown below.

    :::sql
    SELECT `keyword_column`, COUNT(1) AS cnt FROM table_name GROUP BY `keyword_column`

## What protocol is used between I and Treasure Data?

Treasure Agent and td command use HTTPS by default so that we ensure security.


If you have any questions, please feel free to [contact us](<%= @env[:url_contact] %>), or chat with us live using the window at the bottom right.

## Why tdlog plugin warn the endpoint change message?

You see the following message in the td-agent log.

    :::term
    tdlog plugin will change the API endpoint from api.treasure-data.com to <%= @env[:api_endpoint] %>
    If want to keep api.treasure-data.com, please set 'endpoint api.treasure-data.com' in tdlog configuration

This is for some users who change the control of network access to api.treasure-data.com.
If you don't set the access restriction for our API endpoint, please ignore it.
