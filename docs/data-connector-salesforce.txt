# Data Connector for Salesforce

## Prerequisites

NOTE: Currently this feature is in Beta. For more information, please contact <a href=mailto:support@treasuredata.com>support@treasuredata.com</a> .

  * Basic knowledge of Treasure Data

## Step 0: Install 'td' command v0.11.9 or later

Install the newest [Treasure Data Toolbelt](http://toolbelt.treasuredata.com/).

    $ td --version
    0.11.10

## Step 1: Obtain OAuth Client ID and Client Secret

Please visit `Setup -> App Setup -> Create -> Apps` in Salesforce. Then, please scroll down to `Connected Apps` and click `New` button. Please fill in the forms like below.

<p><center><img src="/images/salesforce_app.png" width="100%"/></center></p><br/>

Then, please revisit `Setup -> App Setup -> Create -> Apps` and click `Treasure Data` under `Connected Apps`. It will show `Consumer Key` and `Consumer Secret` which will be both used in the next step.

## Step 2: Create Seed Config File (seed.yml)

First, please prepare `seed.yml` as below, with your Salesforce credentials. This configuration dumps `Account` object specified at `target` field. You'll use "replace" mode:

    :::yaml
    config:
      in:
        type: sfdc
        username: "USERNAME"
        password: "PASSWORD"
        client_id: "CLIENT_ID"
        client_secret: "CLIENT_SECRET"
        security_token: "SECURITY_TOKEN"
        login_url: https://xxx.salesforce.com/
        target: Account
      out:
        mode: replace

## Step 3: Guess Fields (Generate load.yml)

Second, please use `connector:guess`. This command automatically reads the target file, and intelligently guesses the file format.

    :::term
    $ td connector:guess seed.yml -o load.yml

If you open up `load.yml`, you'll see guessed file format definitions including, in some cases, file formats, encodings, column names, and types.

    :::yaml
    ---
    config:
      in:
        type: sfdc
        username: "USERNAME"
        password: "PASSWORD"
        client_id: "CLIENT_ID"
        client_secret: "CLIENT_SECRET"
        security_token: "SECURITY_TOKEN"
        login_url: https://xxx.salesforce.com/
        soql: SELECT ...
        columns:
        - name: Id
          type: string
        - name: IsDeleted
          type: boolean
        - name: MasterRecordId
          type: string
        - name: Name
          type: string
        - name: Type
        ...
      out:
        mode: replace

Then you can preview how the system will parse the file by using `preview` command.

    $ td connector:preview load.yml

If the system detects your column name or type unexpectedly, please modify `load.yml` directly and preview again.

NOTE: Currently, the Data Connector supports parsing of "boolean", "long", "double", "string", and "timestamp" types.

## Step 4: Execute Load Job

Finally, submit the load job. It may take a couple of hours depending on the data size. Users need to specify the database and table where their data is stored. If the database or the table do not exist, the command reports an error.

    :::term
    $ td connector:issue load.yml --database td_sample_db --table td_sample_table

NOTE: Currently the table won't be created automatically. You need to create the destination database and table manually.

## Scheduled execution

You can schedule periodic Data Connector execution for periodic SFDC import.
We take great care in distributing and operating our scheduler in order to achieve high availability.
By using this feature, you no longer need a `cron` daemon on your local data center.

For the scheduled import, Data Connector for SFDC imports all files that match the specified JQL.

### Create the schedule

A new schedule can be created by using the `td connector:create` command.
The name of the schedule, cron-style schedule, the database and table where their data will be stored, and the Data Connector configuration file are required.

    :::term
    $ td connector:create \
        daily_sfdc_import \
        "10 0 * * *" \
        td_sample_db \
        td_sample_table \
        load.yml

NOTE: The `cron` parameter also accepts three special options: `@hourly`, `@daily` and `@monthly`.

### List the Schedules

You can see the list of currently scheduled entries by `td connector:list`.

    :::term
    $ td connector:list
    +-------------------+--------------+----------+-------+--------------+-----------------+------------------------+
    | Name              | Cron         | Timezone | Delay | Database     | Table           | Config                 |
    +-------------------+--------------+----------+-------+--------------+-----------------+------------------------+
    | daily_sfdc_import | 10 0 * * *   | UTC      | 0     | td_sample_db | td_sample_table | {"type"=>"sfdc", ... } |
    +-------------------+--------------+----------+-------+--------------+-----------------+------------------------+

### Show the Setting and History of Schedules

`td connector:show` shows the execution setting of a schedule entry.

    :::term
    % td connector:show daily_sfdc_import
    Name     : daily_sfdc_import
    Cron     : 10 0 * * *
    Timezone : UTC
    Delay    : 0
    Database : td_sample_db
    Table    : td_sample_table

`td connector:history` shows the execution history of a schedule entry. To investigate the results of each individual execution, please use `td job <jobid>`.

    :::term
    % td connector:history daily_sfdc_import
    +--------+---------+---------+--------------+-----------------+----------+---------------------------+----------+
    | JobID  | Status  | Records | Database     | Table           | Priority | Started                   | Duration |
    +--------+---------+---------+--------------+-----------------+----------+---------------------------+----------+
    | 578066 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-18 00:10:05 +0000 | 160      |
    | 577968 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-17 00:10:07 +0000 | 161      |
    | 577914 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-16 00:10:03 +0000 | 152      |
    | 577872 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-15 00:10:04 +0000 | 163      |
    | 577810 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-14 00:10:04 +0000 | 164      |
    | 577766 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-13 00:10:04 +0000 | 155      |
    | 577710 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-12 00:10:05 +0000 | 156      |
    | 577610 | success | 10000   | td_sample_db | td_sample_table | 0        | 2015-04-11 00:10:04 +0000 | 157      |
    +--------+---------+---------+--------------+-----------------+----------+---------------------------+----------+
    8 rows in set

### Delete the Schedule

`td connector:delete` will remove the schedule.

    :::term
    $ td connector:delete daily_sfdc_import
