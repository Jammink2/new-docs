# Writing Query Results to S3

This article explains how to write job results directly to Amazon S3.

## Prerequisites

  * Basic knowledge of Treasure Data, including [the toolbelt](http://toolbelt.treasuredata.com).
  * An Amazon S3 bucket with write permission.

## Usage

<center><img src="/images/result_xyz.png" width="100%" /></center><br /><br />

For on-demand jobs, just add the `--result` option to the `td query` command. After the job is finished, the results are written to the S3 bucket with the given name and path.

    :::term
    $ td query \
      --result 's3://accesskey:secretkey@/bucketname/path/to/file.csv' \
      -w -d testdb \
      "SELECT v['code'] AS code, COUNT(1) AS cnt FROM www_access GROUP BY v['code']"

NOTE: The access key and secret key must be <a href="http://en.wikipedia.org/wiki/Percent-encoding">URL encoded</a>.

For security reasons, you may want to use [AWS IAM](http://aws.amazon.com/iam/) to manage S3 write access permissions.

The default result output format is [CSV RFC 4180](http://www.ietf.org/rfc/rfc4180.txt). Output in TSV format is also supported. For both CSV and TSV formats these are the available options to customize the final format of the files written to S3:

Name      | Description                                                      | Restrictions                 | CSV default                  | TSV default            |
:-------: | :--------------------------------------------------------------: | :--------------------------: | :--------------------------: | :--------------------: |
format    | Main setting to specify the file format                          |                              | csv                          | csv (Use 'tsv' to select the TSV format)
delimiter | Used to specify the delimiter character                          |                              | , (comma)                    | \t (tab)
quote     | Used to specify the quote character                              | not available for TSV format | " (double quote)             | (no character)
escape    | Specifies the character used to escape other special characters  | not available for TSV format | " (double quote)             | (no character)
null      | Used to specify how a 'null' value is displayed                  |                              | (empty string)               | \N (backslash capital n)
newline   | Used to specify the EOL (End-Of-Line) representation             |                              | \r\n (CRLF)                  | \r\n (CRLF)
header    | Can be used to suppress the column header                        |                              | column header printed. Use 'false' to suppress | column header printed. Use 'false' to suppress

 This is the a default sample output in CSV format when no customization is requested:

    :::csv
    code,cnt
    "200",4981
    "302",
    "404",17
    "500",2

When the format=tsv, delimiter=", and null=NULL options are specified:
    :::term
    $ td query \
      --result 's3://accesskey:secretkey@/bucket_name/path/to/file.tsv?format=tsv&delimiter=%22&null=empty' \
      -w -d testdb \
      "SELECT v['code'] AS code, COUNT(1) AS cnt FROM www_access GROUP BY v['code']"

the output will change to:

    :::tsv
    "code" "cnt"
    "200" 4981
    "302" NULL
    "404" 17
    "500" 2
